<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimple.blog.service.mapper.BlogTagMapper">
    
    <resultMap type="com.dimple.blog.service.entity.BlogTag" id="BlogTagResult">
        <result property="id"    column="id"    />
        <result property="title"    column="title"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBlogTagVo">
        select id, title, create_by, create_time, update_by, update_time from blog_tag
    </sql>

    <select id="selectBlogTagList" parameterType="BlogTag" resultMap="BlogTagResult">
        <include refid="selectBlogTagVo"/>
        <where>  
            <if test="title != null  and title != ''">  and title like concat('%', #{title}, '%')</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>
    
    <select id="selectBlogTagById" parameterType="Long" resultMap="BlogTagResult">
        <include refid="selectBlogTagVo"/>
        where id = #{id}
    </select>
    <select id="selectBlogTagListByIds" resultType="com.dimple.blog.service.entity.BlogTag">
        <include refid="selectBlogTagVo"/>
        where id in
        <foreach item="id" collection="collection" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>
    <select id="selectBlogTagByTitles" resultType="com.dimple.blog.service.entity.BlogTag">
        <include refid="selectBlogTagVo"/>
        where title in
        <foreach item="title" collection="collection" open="(" separator="," close=")">
           #{title}
        </foreach>
    </select>

    <insert id="insertBlogTag" parameterType="BlogTag" useGeneratedKeys="true" keyProperty="id">
        insert into blog_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">title,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null and title != ''">#{title},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBlogTag" parameterType="BlogTag">
        update blog_tag
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null and title != ''">title = #{title},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlogTagById" parameterType="Long">
        delete from blog_tag where id = #{id}
    </delete>

    <delete id="deleteBlogTagByIds" parameterType="String">
        delete from blog_tag where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>