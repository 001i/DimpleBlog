<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimple.blog.service.mapper.BlogCommentMapper">
    
    <resultMap type="com.dimple.blog.service.entity.BlogComment" id="BlogCommentResult">
        <result property="id"    column="id"    />
        <result property="articleId"    column="article_id"    />
        <result property="username"    column="username"    />
        <result property="parentId"    column="parent_id"    />
        <result property="avatars"    column="avatars"    />
        <result property="os"    column="os"    />
        <result property="browser"    column="browser"    />
        <result property="ip"    column="ip"    />
        <result property="location"    column="location"    />
        <result property="content"    column="content"    />
        <result property="email"    column="email"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectBlogCommentVo">
        select id,
               article_id,
               username,
               parent_id,
               avatars,
               content,
               reply_id,
               type,
               link,
               visit_id,
               ip,
               location,
               os,
               broswer,
               email,
               create_by,
               create_time,
               update_by,
               update_time
        from blog_comment
    </sql>

    <select id="selectBlogCommentList" parameterType="BlogComment" resultMap="BlogCommentResult">
        <include refid="selectBlogCommentVo"/>
        <where>  
            <if test="articleId != null "> and article_id = #{articleId}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="parentId != null "> and parent_id = #{parentId}</if>
            <if test="avatars != null  and avatars != ''"> and avatars = #{avatars}</if>
            <if test="content != null  and content != ''"> and content = #{content}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>
    
    <select id="selectBlogCommentById" parameterType="Long" resultMap="BlogCommentResult">
        <include refid="selectBlogCommentVo"/>
        where id = #{id}
    </select>


    <update id="updateBlogComment" parameterType="BlogComment">
        update blog_comment
        <trim prefix="SET" suffixOverrides=",">
            <if test="articleId != null">article_id = #{articleId},</if>
            <if test="username != null">username = #{username},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="avatars != null">avatars = #{avatars},</if>
            <if test="link != null">link = #{link},</if>
            <if test="content != null">content = #{content},</if>
            <if test="email != null">email = #{email},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBlogCommentById" parameterType="Long">
        delete from blog_comment where id = #{id}
    </delete>

    <delete id="deleteBlogCommentByIds" parameterType="String">
        delete from blog_comment where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>