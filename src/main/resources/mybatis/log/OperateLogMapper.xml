<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dimple.project.log.mapper.OperateLogMapper">

    <resultMap type="com.dimple.project.log.domain.OperateLog" id="SysOperateLogResult">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="businessType" column="business_type"/>
        <result property="method" column="method"/>
        <result property="requestMethod" column="request_method"/>
        <result property="operatorType" column="operator_type"/>
        <result property="operateName" column="operate_name"/>
        <result property="url" column="url"/>
        <result property="ip" column="ip"/>
        <result property="location" column="location"/>
        <result property="param" column="param"/>
        <result property="cost" column="cost"/>
        <result property="jsonResult" column="json_result"/>
        <result property="status" column="status"/>
        <result property="errorMsg" column="error_msg"/>
        <result property="operateTime" column="operate_time"/>
    </resultMap>

    <sql id="selectOperateLogVo">
        select id, title, business_type, method, request_method, cost,operator_type, operate_name, url, ip, location, param, json_result, status, error_msg, operate_time
        from sys_operate_log
    </sql>

    <insert id="insertOperateLog" parameterType="com.dimple.project.log.domain.OperateLog">
		insert into sys_operate_log(title, business_type, method, request_method, operator_type, operate_name, url, ip, location, param, json_result, status, error_msg, operate_time,cost)
        values (#{title}, #{businessType}, #{method}, #{requestMethod}, #{operatorType}, #{operateName}, #{url}, #{ip}, #{location}, #{param}, #{jsonResult}, #{status}, #{errorMsg}, sysdate(),#{cost})
	</insert>

    <select id="selectOperateLogList" parameterType="com.dimple.project.log.domain.OperateLog"
            resultMap="SysOperateLogResult">
        <include refid="selectOperateLogVo"/>
        <where>
            <if test="title != null and title != ''">
                AND title like concat('%', #{title}, '%')
            </if>
            <if test="businessType != null">
                AND business_type = #{businessType}
            </if>
            <if test="businessTypes != null and businessTypes.length > 0">
                AND business_type in
                <foreach collection="businessTypes" item="businessType" open="(" separator="," close=")">
                    #{businessType}
                </foreach>
            </if>
            <if test="status != null">
                AND status = #{status}
            </if>
            <if test="operateName != null and operateName != ''">
                AND operate_name like concat('%', #{operateName}, '%')
            </if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                and date_format(operate_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                and date_format(operate_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
            </if>
        </where>
    </select>

    <delete id="deleteOperateLogByIds" parameterType="String">
        delete from sys_operate_log where oper_id in
        <foreach collection="array" item="operId" open="(" separator="," close=")">
            #{operId}
        </foreach>
    </delete>

    <select id="selectOperateLogById" parameterType="Long" resultMap="SysOperateLogResult">
        <include refid="selectOperateLogVo"/>
        where oper_id = #{operId}
    </select>

    <update id="cleanOperateLog">
        truncate table sys_operate_log
    </update>

</mapper> 