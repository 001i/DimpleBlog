<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dimple.dao.OperateLogMapper" >
  <resultMap id="BaseResultMap" type="com.dimple.bean.OperateLog" >
    <id column="operate_id" property="operateId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="operate_type" property="operateType" jdbcType="INTEGER" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="operate_url" property="operateUrl" jdbcType="VARCHAR" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="operate_ip" property="operateIp" jdbcType="VARCHAR" />
    <result column="operate_location" property="operateLocation" jdbcType="VARCHAR" />
    <result column="operate_param" property="operateParam" jdbcType="VARCHAR" />
    <result column="operate_status" property="operateStatus" jdbcType="BIT" />
    <result column="error_msg" property="errorMsg" jdbcType="VARCHAR" />
    <result column="operate_time" property="operateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    operate_id, title, operate_type, method, operate_url, operator_name, operate_ip, 
    operate_location, operate_param, operate_status, error_msg, operate_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.dimple.bean.OperateLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from operate_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from operate_log
    where operate_id = #{operateId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from operate_log
    where operate_id = #{operateId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dimple.bean.OperateLogExample" >
    delete from operate_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dimple.bean.OperateLog" >
    insert into operate_log (operate_id, title, operate_type, 
      method, operate_url, operator_name, 
      operate_ip, operate_location, operate_param, 
      operate_status, error_msg, operate_time
      )
    values (#{operateId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{operateType,jdbcType=INTEGER}, 
      #{method,jdbcType=VARCHAR}, #{operateUrl,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}, 
      #{operateIp,jdbcType=VARCHAR}, #{operateLocation,jdbcType=VARCHAR}, #{operateParam,jdbcType=VARCHAR}, 
      #{operateStatus,jdbcType=BIT}, #{errorMsg,jdbcType=VARCHAR}, #{operateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dimple.bean.OperateLog" >
    insert into operate_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="operateId != null" >
        operate_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="operateType != null" >
        operate_type,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="operateUrl != null" >
        operate_url,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
      <if test="operateIp != null" >
        operate_ip,
      </if>
      <if test="operateLocation != null" >
        operate_location,
      </if>
      <if test="operateParam != null" >
        operate_param,
      </if>
      <if test="operateStatus != null" >
        operate_status,
      </if>
      <if test="errorMsg != null" >
        error_msg,
      </if>
      <if test="operateTime != null" >
        operate_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="operateId != null" >
        #{operateId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        #{operateType,jdbcType=INTEGER},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="operateUrl != null" >
        #{operateUrl,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null" >
        #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateLocation != null" >
        #{operateLocation,jdbcType=VARCHAR},
      </if>
      <if test="operateParam != null" >
        #{operateParam,jdbcType=VARCHAR},
      </if>
      <if test="operateStatus != null" >
        #{operateStatus,jdbcType=BIT},
      </if>
      <if test="errorMsg != null" >
        #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dimple.bean.OperateLogExample" resultType="java.lang.Integer" >
    select count(*) from operate_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update operate_log
    <set >
      <if test="record.operateId != null" >
        operate_id = #{record.operateId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.operateType != null" >
        operate_type = #{record.operateType,jdbcType=INTEGER},
      </if>
      <if test="record.method != null" >
        method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.operateUrl != null" >
        operate_url = #{record.operateUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null" >
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.operateIp != null" >
        operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      </if>
      <if test="record.operateLocation != null" >
        operate_location = #{record.operateLocation,jdbcType=VARCHAR},
      </if>
      <if test="record.operateParam != null" >
        operate_param = #{record.operateParam,jdbcType=VARCHAR},
      </if>
      <if test="record.operateStatus != null" >
        operate_status = #{record.operateStatus,jdbcType=BIT},
      </if>
      <if test="record.errorMsg != null" >
        error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.operateTime != null" >
        operate_time = #{record.operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update operate_log
    set operate_id = #{record.operateId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      operate_type = #{record.operateType,jdbcType=INTEGER},
      method = #{record.method,jdbcType=VARCHAR},
      operate_url = #{record.operateUrl,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      operate_ip = #{record.operateIp,jdbcType=VARCHAR},
      operate_location = #{record.operateLocation,jdbcType=VARCHAR},
      operate_param = #{record.operateParam,jdbcType=VARCHAR},
      operate_status = #{record.operateStatus,jdbcType=BIT},
      error_msg = #{record.errorMsg,jdbcType=VARCHAR},
      operate_time = #{record.operateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dimple.bean.OperateLog" >
    update operate_log
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="operateType != null" >
        operate_type = #{operateType,jdbcType=INTEGER},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="operateUrl != null" >
        operate_url = #{operateUrl,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="operateIp != null" >
        operate_ip = #{operateIp,jdbcType=VARCHAR},
      </if>
      <if test="operateLocation != null" >
        operate_location = #{operateLocation,jdbcType=VARCHAR},
      </if>
      <if test="operateParam != null" >
        operate_param = #{operateParam,jdbcType=VARCHAR},
      </if>
      <if test="operateStatus != null" >
        operate_status = #{operateStatus,jdbcType=BIT},
      </if>
      <if test="errorMsg != null" >
        error_msg = #{errorMsg,jdbcType=VARCHAR},
      </if>
      <if test="operateTime != null" >
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dimple.bean.OperateLog" >
    update operate_log
    set title = #{title,jdbcType=VARCHAR},
      operate_type = #{operateType,jdbcType=INTEGER},
      method = #{method,jdbcType=VARCHAR},
      operate_url = #{operateUrl,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      operate_ip = #{operateIp,jdbcType=VARCHAR},
      operate_location = #{operateLocation,jdbcType=VARCHAR},
      operate_param = #{operateParam,jdbcType=VARCHAR},
      operate_status = #{operateStatus,jdbcType=BIT},
      error_msg = #{errorMsg,jdbcType=VARCHAR},
      operate_time = #{operateTime,jdbcType=TIMESTAMP}
    where operate_id = #{operateId,jdbcType=INTEGER}
  </update>
</mapper>